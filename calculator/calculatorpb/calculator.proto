syntax="proto3";

package calculator;
option go_package="calculatorpb";

message Calculating {
    int32 number_one = 1;
    int32 number_two = 2;
}

message CalculatorRequest {
    Calculating calculating = 1;
}

message CalculatorResponse {
    int32 result = 1;
}

message PrimeNumberDecompositionRequest {
    Calculating calculating = 1;
}

message PrimeNumberDecompositionResponse {
    int32 result = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    int32 result = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 max = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    // Unary
    rpc Calculate(CalculatorRequest) returns (CalculatorResponse) {};
    // Server Stream
    rpc PrimeNumberDecompose(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};
    // Client Stream
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};
    // BiDi Stream
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};
    // Unary square root calculator, error handling
    // this RPC will throw an exception if the sent number is genative
    // the error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {}
}
